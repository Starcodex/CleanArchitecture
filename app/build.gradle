apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.starcodex.cleanarchitecture"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testApplicationId "com.starcodex.cleanarchitecture.test"
        testInstrumentationRunner "com.starcodex.cleanarchitecture.TestApplicationRunner"
    }

    testOptions {
        reportDir = "$project.buildDir/results/report"
        resultsDir = "$project.buildDir/results"
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEV"
            buildConfigField "String", "DOMAIN", "\"api.themoviedb.org/3\""
            buildConfigField "String", "IMG_DOMAIN", "\"image.tmdb.org/t/p/\""
            buildConfigField "String", "IMG_300", "\"w300/\""
            buildConfigField "String", "IMG_500", "\"w500/\""
            buildConfigField "String", "API_KEY", "\"8c0457b0a34b8e815c0e1ef2ff2aa7d1\""
            buildConfigField "String", "DB_NAME", "\"debug-main-db\""
            debuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources true

            buildConfigField "String", "DOMAIN", "\"api.themoviedb.org/3\""
            buildConfigField "String", "IMG_DOMAIN", "\"image.tmdb.org/t/p/\""
            buildConfigField "String", "IMG_300", "\"w300/\""
            buildConfigField "String", "IMG_500", "\"w500/\""
            buildConfigField "String", "API_KEY", "\"8c0457b0a34b8e815c0e1ef2ff2aa7d1\""
            buildConfigField "String", "DB_NAME", "\"release-main-db\""
        }
    }

    android.applicationVariants.all {
        def aptOutputDir = new File(buildDir, "generated/source/kapt/${it.unitTestVariant.dirName}")
        it.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
        assembleDebug.finalizedBy('assembleDebugUnitTest')
    }

    sourceSets { debug { java.srcDirs = ['src/debug/java', 'src/debug/java/'] } }

    dataBinding { enabled = true }

    kapt { generateStubs = true }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':commons')
    implementation project(':data')
    implementation project(':domain')

    implementation "androidx.appcompat:appcompat:$androidXCoreVersion"
    implementation "androidx.fragment:fragment:$androidXCoreVersion"
    implementation "androidx.fragment:fragment-ktx:$androidXCoreVersion"

    implementation "com.google.android.material:material:$androidXVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidXVersion"
    implementation "androidx.recyclerview:recyclerview:$androidXVersion"
    implementation "androidx.cardview:cardview:$androidXVersion"

    implementation "androidx.constraintlayout:constraintlayout:$androidXConstraintVersion"
    implementation "android.arch.lifecycle:runtime:$androidXVersion"

    implementation "androidx.lifecycle:lifecycle-extensions:$androidXLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidXLifecycleVersion"


    // glide for image
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Room compiler
    kapt "androidx.room:room-compiler:$roomVersion"

    // Dagger Compiler & Processor
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

}
